apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-label-updater
  namespace: db
data:
  update-labels.sh: |
    #!/bin/bash
    set -e
    
    while true; do
      echo "Checking PostgreSQL repmgr cluster state..."
      
      # Get all postgres pods
      for i in 0 1 2; do
        POD_NAME="postgres-$i"
        
        # Check if pod exists and is ready
        if kubectl get pod $POD_NAME -n db &>/dev/null; then
          # Get repmgr node role
          ROLE=$(kubectl exec -n db $POD_NAME -- bash -c "repmgr node check --role 2>/dev/null | grep -oE 'primary|standby'" 2>/dev/null || echo "error")
          
          if [ "$ROLE" = "primary" ]; then
            echo "$POD_NAME is primary"
            kubectl label pod $POD_NAME -n db role=master --overwrite
          elif [ "$ROLE" = "standby" ]; then
            echo "$POD_NAME is standby"
            kubectl label pod $POD_NAME -n db role=replica --overwrite
          else
            echo "$POD_NAME role unknown or error"
          fi
        fi
      done
      
      sleep 5
    done
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-label-updater
  namespace: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-label-updater
  template:
    metadata:
      labels:
        app: postgres-label-updater
    spec:
      serviceAccountName: postgres-label-updater
      containers:
      - name: updater
        image: bitnami/kubectl:1.33.3
        command:
        - bash
        - /scripts/update-labels.sh
        volumeMounts:
        - name: scripts
          mountPath: /scripts
      volumes:
      - name: scripts
        configMap:
          name: postgres-label-updater
          defaultMode: 0755
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-label-updater
  namespace: db
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: postgres-label-updater
  namespace: db
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "patch", "update"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: postgres-label-updater
  namespace: db
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: postgres-label-updater
subjects:
- kind: ServiceAccount
  name: postgres-label-updater
  namespace: db