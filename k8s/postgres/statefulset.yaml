apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: db
spec:
  serviceName: postgres-headless
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        imagePullPolicy: IfNotPresent
        env:
        - name: PGVERSION
          value: "15"
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres_password
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: PATRONI_KUBERNETES_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: PATRONI_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PATRONI_KUBERNETES_LABELS
          value: "{app: postgres}"
        - name: PATRONI_SUPERUSER_USERNAME
          value: postgres
        - name: PATRONI_SUPERUSER_PASSWORD
          value: postgres_password
        - name: PATRONI_REPLICATION_USERNAME
          value: replicator
        - name: PATRONI_REPLICATION_PASSWORD
          value: repl_password
        - name: PATRONI_SCOPE
          value: postgres-cluster
        - name: PATRONI_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PATRONI_POSTGRESQL_DATA_DIR
          value: /var/lib/postgresql/data/pgdata
        - name: PATRONI_POSTGRESQL_PGPASS
          value: /tmp/pgpass
        - name: PATRONI_POSTGRESQL_LISTEN
          value: "0.0.0.0:5432"
        - name: PATRONI_RESTAPI_LISTEN
          value: "0.0.0.0:8008"
        - name: PATRONI_ETCD_HOSTS
          value: "postgres-etcd:2379"
        - name: PATRONI_LOG_LEVEL
          value: INFO
        ports:
        - containerPort: 5432
          name: postgresql
        - containerPort: 8008
          name: patroni
        volumeMounts:
        - name: pgdata
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/patroni
        command:
          - /bin/bash
          - -c
          - |
            set -e
            
            # Install Patroni and dependencies
            apt-get update && apt-get install -y python3-pip python3-psycopg2 python3-venv
            
            # Create virtual environment and install Patroni
            python3 -m venv /opt/patroni-venv
            /opt/patroni-venv/bin/pip install patroni[etcd]
            
            # Setup Patroni configuration
            envsubst < /etc/patroni/patroni.yml > /tmp/patroni.yml
            
            # Start Patroni
            exec /opt/patroni-venv/bin/patroni /tmp/patroni.yml
        readinessProbe:
          httpGet:
            path: /health
            port: 8008
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8008
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
      volumes:
      - name: postgres-config
        configMap:
          name: postgres-config
  volumeClaimTemplates:
  - metadata:
      name: pgdata
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi