apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-innodb-cluster-config
  namespace: db
data:
  primary.cnf: |
    [mysqld]
    # InnoDB Cluster requirements
    disabled_storage_engines="MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY"
    server_id=1
    gtid_mode=ON
    enforce_gtid_consistency=ON
    binlog_checksum=NONE
    log_bin=binlog
    log_slave_updates=ON
    binlog_format=ROW
    master_info_repository=TABLE
    relay_log_info_repository=TABLE
    transaction_write_set_extraction=XXHASH64
    
    # Performance and reliability
    innodb_flush_log_at_trx_commit=1
    sync_binlog=1
    
    # Group Replication will be configured by MySQL Shell after initialization
    
  replica.cnf: |
    [mysqld]
    # InnoDB Cluster requirements
    disabled_storage_engines="MyISAM,BLACKHOLE,FEDERATED,ARCHIVE,MEMORY"
    gtid_mode=ON
    enforce_gtid_consistency=ON
    binlog_checksum=NONE
    log_bin=binlog
    log_slave_updates=ON
    binlog_format=ROW
    master_info_repository=TABLE
    relay_log_info_repository=TABLE
    transaction_write_set_extraction=XXHASH64
    
    # Performance and reliability
    innodb_flush_log_at_trx_commit=1
    sync_binlog=1
    
    # Group Replication will be configured by MySQL Shell after initialization
    
  setup-cluster.js: |
    // MySQL Shell script to set up InnoDB Cluster
    // This script is kept for reference but the init job handles all setup
    print('This script is for reference. Use the init job for actual cluster setup.\n');
    
  check-cluster.js: |
    // Check cluster health
    try {
      shell.connect('clusteradmin@mysql-0.mysql-headless.db.svc.cluster.local:3306');
      var cluster = dba.getCluster();
      print(cluster.status());
    } catch(e) {
      print('Error: ' + e.message);
    }