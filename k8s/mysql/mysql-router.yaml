apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-router
  namespace: db
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mysql-router
  template:
    metadata:
      labels:
        app: mysql-router
    spec:
      initContainers:
      - name: wait-for-cluster
        image: mysql:8.0
        env:
        - name: MYSQL_PWD
          value: "ClusterAdmin123!"
        command:
        - bash
        - "-c"
        - |
          echo "Waiting for InnoDB Cluster to be initialized..."
          until mysql -h mysql-0.mysql-headless.db.svc.cluster.local -u clusteradmin -e "SELECT 1" 2>/dev/null; do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done
          
          # Wait for cluster to be formed
          echo "Waiting for cluster to be formed..."
          until mysql -h mysql-0.mysql-headless.db.svc.cluster.local -u clusteradmin \
            -e "SELECT COUNT(*) FROM performance_schema.replication_group_members WHERE MEMBER_STATE='ONLINE'" 2>/dev/null | grep -q -E "[1-9]"; do
            echo "Waiting for cluster members to be online..."
            sleep 10
          done
          echo "Cluster is ready!"
      containers:
      - name: mysql-router
        image: mysql/mysql-router:8.0
        env:
        - name: MYSQL_HOST
          value: "mysql-0.mysql-headless.db.svc.cluster.local"
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: root-password
        - name: MYSQL_INNODB_CLUSTER_MEMBERS
          value: "3"
        command:
        - "/bin/bash"
        - "-c"
        - |
          set -e
          
          # Wait for cluster to be ready
          echo "Waiting for InnoDB Cluster to be ready..."
          while true; do
            if mysql -h mysql-0.mysql-headless.db.svc.cluster.local -u clusteradmin -pClusterAdmin123! -e "SELECT 1" 2>/dev/null; then
              echo "MySQL is reachable, checking cluster status..."
              if mysql -h mysql-0.mysql-headless.db.svc.cluster.local -u clusteradmin -pClusterAdmin123! \
                -e "SELECT MEMBER_STATE FROM performance_schema.replication_group_members WHERE MEMBER_ID = @@server_uuid" 2>/dev/null | grep -q ONLINE; then
                echo "Cluster is ONLINE"
                break
              fi
            fi
            echo "Waiting for cluster to be ready..."
            sleep 10
          done
          
          # Bootstrap MySQL Router
          echo "Bootstrapping MySQL Router..."
          if mysqlrouter --bootstrap clusteradmin:ClusterAdmin123!@mysql-0.mysql-headless.db.svc.cluster.local:3306 \
            --directory /tmp/mysqlrouter \
            --conf-use-sockets \
            --account mysqlrouter \
            --account-create if-not-exists \
            --user=root \
            --force; then
            echo "Bootstrap successful"
          else
            echo "Bootstrap failed, retrying..."
            sleep 5
            mysqlrouter --bootstrap clusteradmin:ClusterAdmin123!@mysql-0.mysql-headless.db.svc.cluster.local:3306 \
              --directory /tmp/mysqlrouter \
              --user=root \
              --force
          fi
          
          # Start MySQL Router
          echo "Starting MySQL Router..."
          exec mysqlrouter --config /tmp/mysqlrouter/mysqlrouter.conf
        ports:
        - containerPort: 6446
          name: rw-port
          protocol: TCP
        - containerPort: 6447
          name: ro-port
          protocol: TCP
        - containerPort: 64460
          name: x-rw-port
          protocol: TCP
        - containerPort: 64470
          name: x-ro-port
          protocol: TCP
        - containerPort: 8443
          name: rest-port
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 6446
          initialDelaySeconds: 30
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-router
  namespace: db
  labels:
    app: mysql-router
spec:
  type: ClusterIP
  selector:
    app: mysql-router
  ports:
  - port: 6446
    targetPort: 6446
    name: mysql-rw
    protocol: TCP
  - port: 6447
    targetPort: 6447
    name: mysql-ro
    protocol: TCP
  - port: 64460
    targetPort: 64460
    name: mysql-x-rw
    protocol: TCP
  - port: 64470
    targetPort: 64470
    name: mysql-x-ro
    protocol: TCP
  - port: 8443
    targetPort: 8443
    name: rest-api
    protocol: TCP