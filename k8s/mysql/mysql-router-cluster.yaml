apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-router-cluster
  namespace: db
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mysql-router-cluster
  template:
    metadata:
      labels:
        app: mysql-router-cluster
    spec:
      containers:
      - name: mysql-router
        image: mysql/mysql-router:8.0
        env:
        - name: MYSQL_HOST
          value: "mysql-0.mysql-headless.db.svc.cluster.local"
        - name: MYSQL_USER
          value: "mysqlrouter"
        - name: MYSQL_PASSWORD
          value: "RouterPass123!"
        command:
        - bash
        - "-c"
        - |
          set -e
          
          # Wait for cluster to be ready
          echo "Waiting for InnoDB Cluster to be ready..."
          while true; do
            if mysql -h mysql-0.mysql-headless.db.svc.cluster.local -u clusteradmin -pClusterAdmin123! \
              -e "SELECT COUNT(*) FROM performance_schema.replication_group_members WHERE MEMBER_STATE='ONLINE'" 2>/dev/null | grep -q -E "[3]"; then
              echo "All cluster members are ONLINE"
              break
            fi
            echo "Waiting for all cluster members to be online..."
            sleep 10
          done
          
          # Bootstrap MySQL Router
          echo "Bootstrapping MySQL Router against InnoDB Cluster..."
          if [ ! -f /var/lib/mysqlrouter/mysqlrouter.conf ]; then
            mysqlrouter --bootstrap clusteradmin:ClusterAdmin123!@mysql-0.mysql-headless.db.svc.cluster.local:3306 \
              --directory /var/lib/mysqlrouter \
              --account mysqlrouter \
              --account-host '%' \
              --user root \
              --force || {
                echo "Bootstrap failed, trying without account creation..."
                mysqlrouter --bootstrap clusteradmin:ClusterAdmin123!@mysql-0.mysql-headless.db.svc.cluster.local:3306 \
                  --directory /var/lib/mysqlrouter \
                  --user root \
                  --force
              }
          fi
          
          # Start MySQL Router
          echo "Starting MySQL Router..."
          exec mysqlrouter --config /var/lib/mysqlrouter/mysqlrouter.conf
        ports:
        - containerPort: 6446
          name: rw-port
          protocol: TCP
        - containerPort: 6447
          name: ro-port
          protocol: TCP
        - containerPort: 64460
          name: x-rw-port
          protocol: TCP
        - containerPort: 64470
          name: x-ro-port
          protocol: TCP
        - containerPort: 8443
          name: rest-port
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 6446
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 6446
          initialDelaySeconds: 30
          periodSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
        volumeMounts:
        - name: router-data
          mountPath: /var/lib/mysqlrouter
      volumes:
      - name: router-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-router-cluster
  namespace: db
  labels:
    app: mysql-router-cluster
spec:
  type: ClusterIP
  selector:
    app: mysql-router-cluster
  ports:
  - port: 6446
    targetPort: 6446
    name: mysql-rw
    protocol: TCP
  - port: 6447
    targetPort: 6447
    name: mysql-ro
    protocol: TCP
  - port: 64460
    targetPort: 64460
    name: mysql-x-rw
    protocol: TCP
  - port: 64470
    targetPort: 64470
    name: mysql-x-ro
    protocol: TCP
  - port: 8443
    targetPort: 8443
    name: rest-api
    protocol: TCP