apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: db
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql-headless
  replicas: 3
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: mysql
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - mysql
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: init-mysql
        image: mysql:8.0
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: root-password
        command:
        - bash
        - "-c"
        - |
          set -ex
          # Extract ordinal from pod name
          [[ $POD_NAME =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          
          # Generate server-id
          echo "[mysqld]" > /mnt/conf.d/server-id.cnf
          echo "server_id=$((100 + $ordinal))" >> /mnt/conf.d/server-id.cnf
          echo "report_host=$POD_NAME.mysql-headless.db.svc.cluster.local" >> /mnt/conf.d/server-id.cnf
          
          # Copy appropriate config
          if [[ $ordinal -eq 0 ]]; then
            cp /mnt/config-map/primary.cnf /mnt/conf.d/
          else
            cp /mnt/config-map/replica.cnf /mnt/conf.d/
          fi
        volumeMounts:
        - name: conf
          mountPath: /mnt/conf.d
        - name: config-map
          mountPath: /mnt/config-map
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: root-password
        - name: MYSQL_DATABASE
          value: "test"
        - name: MYSQL_ROOT_HOST
          value: "%"
        ports:
        - name: mysql
          containerPort: 3306
        - name: mysql-x
          containerPort: 33060
        - name: group-repl
          containerPort: 33061
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 2Gi
        livenessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD || exit 1
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - bash
            - "-c"
            - |
              mysql -h localhost -u root -p$MYSQL_ROOT_PASSWORD -e "SELECT 1" || exit 1
          initialDelaySeconds: 45
          periodSeconds: 5
          timeoutSeconds: 3
      - name: mysql-shell
        image: mysql/mysql-server:8.0
        command:
        - bash
        - "-c"
        - |
          # MySQL Shell is already included in mysql/mysql-server:8.0 image
          # Just keep container running for exec access
          tail -f /dev/null
        volumeMounts:
        - name: config-map
          mountPath: /scripts
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
      volumes:
      - name: conf
        emptyDir: {}
      - name: config-map
        configMap:
          name: mysql-innodb-cluster-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi